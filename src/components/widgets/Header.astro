---
import { Icon } from 'astro-icon';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  type?: string;
}

export interface Props {
  links?: Array<Link>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const { links = [], isSticky = false, position = 'center' } = Astro.props;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    'top-0 z-40 flex-none mx-auto w-full transition-all ease-in duration-100',
  ]}
  id="header"
>
  <div class="px-3 md:px-4 mx-auto w-full md:flex md:justify-end max-w-7xl">
    <div class:list={[{ 'mr-auto': position === 'right' }, 'flex justify-end']}>
      <div class="flex items-center">
        {
          links?.length ? (
            <ul class="flex md:order-1 -ml-2 md:ml-4 md:mb-0 pointer-events-auto">
              {links.map(({ ariaLabel, href, text, icon }) => (
                <li>
                  <a
                    class="text-muted dark:text-gray-400 text-gray-400 hover:bg-zinc-800 dark:hover:bg-zinc-800 focus:outline-none rounded-full text-sm p-2.5 inline-flex items-center"
                    aria-label={ariaLabel}
                    href={href}
                  >
                    {icon && <Icon name={icon} class="w-5 h-5" />}
                    <Fragment set:html={text} />
                  </a>
                </li>
              ))}
            </ul>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
